{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transfromProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","leaders","returnedLead","left","middle","object","body","heading","About","title","list","listOfLeaders","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","onClick","isOpen","toggle","RenderDish","top","RenderComments","comments","returnedComm","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","class","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f49018d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <Loading/>\r\n        );\r\n    } else if (errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    } else\r\n        return(\r\n            <FadeTransform in\r\n                transfromProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name}/>\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading={props.promosLoading} \r\n                    errMess={props.promosErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                    isLoading={props.leadersLoading}\r\n                    errMess={props.leadersErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish}){\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                <RenderMenuItem dish={dish}/>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if(props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if(props.dishes.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>    \r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9.%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is: \"+JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\".firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15)\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15)\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15),isNumber\r\n                                        }}/>\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                />{' '}\r\n                                                <strong> May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                            <option>Tel.</option>\r\n                                            <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );    \r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leaders}){\r\n    let returnedLead = leaders.leaders.map(leader => {\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <Media>\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name}/>\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </div>\r\n        );\r\n    }) \r\n    if (leaders != null){\r\n        return(\r\n            <div>\r\n                {returnedLead} \r\n            </div>\r\n        );\r\n    } else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <p>Leader {leader.name}</p>\r\n        );\r\n    });\r\n\r\n    const listOfLeaders = (leaders) => {\r\n        if(leaders.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if(leaders.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <Stagger in>\r\n                    <div className=\"row row-content\">\r\n                        <div className=\"col-12\">\r\n                            <h2>Corporate Leadership</h2>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <Fade in>\r\n                                <Media list>\r\n                                    <RenderLeader leaders={leaders}/>\r\n                                </Media>\r\n                            </Fade>\r\n                        </div>\r\n                    </div>\r\n                </Stagger>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                {listOfLeaders(props.leaders)}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, BreadcrumbItem, Breadcrumb, Button, Modal, ModalHeader,ModalBody,Label,Col,Row} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minLength = (len) => (val) => (val) && (val.length>=len); \r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId,values.rating,values.author,values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\">\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-edit fa-lg\"></span>Submit Comment\r\n                </Button>          \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Label htmlFor=\".rating\">Rating</Label>\r\n                            <Row className=\"form-group\">    \r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\"\r\n                                        >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Label htmlFor=\"author\">Your Name</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                        }}/>\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Label htmlFor=\"comment\">Comment</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" name=\"comment\" rows=\"6\"\r\n                                    className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    if (dish != null) {\r\n        return(\r\n            <FadeTransform in\r\n                transfromProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments,postComment, dishId}) {\r\n    let returnedComm = comments.map(comment => {\r\n        return (\r\n            <Fade in>\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>    \r\n                </li>\r\n            </Fade>\r\n        );\r\n    }) \r\n    if (comments != null){\r\n        return(\r\n            <div>\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {returnedComm}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment}/> \r\n            </div>\r\n        );\r\n    } else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n\r\nconst DishDetail = (props) => { \r\n    if(props.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if(props.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else\r\n    if(props.dish!=null){\r\n        return (\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish = {props.dish}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments = {props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}/> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n    } else {\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler,Collapse,NavItem, Jumbotron, Button, Modal, ModalHeader,ModalBody, Form, FormGroup, Input,Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    \r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \"+this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className = \"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Ristorante Con Fusion\"/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                                    </Button> \r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId,rating,author,comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating:rating,\r\n        author:author,\r\n        comment:comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method:'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('Post comments ',error.message);\r\n        alert('Your comment could not be posted\\nError: '+error.message);\r\n    });\r\n        \r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = ()=> ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })    \r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = ()=> ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = ()=> ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType: contactType,\r\n        message:message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method:'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {dispatch(addFeedback(response));\r\n        alert('Thank you for your feedback!\\n'+JSON.stringify(response))})\r\n        .catch(error => { console.log('Post feedback ',error.message);\r\n        alert('Your Feedback could not be posted\\nError: '+error.message);\r\n    });\r\n        \r\n}\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect , withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes,fetchComments,fetchPromos,fetchLeaders,postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message)),\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())}\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish)=>dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo)=>promo.featured)[0]}\r\n        promosLoading={this.props.promotions.isLoading}\r\n        promosErrMess={this.props.promotions.errMess}        \r\n        leader={this.props.leaders.leaders.filter((leader)=>leader.featured)[0]}\r\n        leadersLoading={this.props.leaders.isLoading}\r\n        leadersErrMess={this.props.leaders.errMess}/>\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match})=>{\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish)=>dish.id===parseInt(match.params.dishId,10))[0]}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errMess={this.props.dishes.errMess}\r\n        comments={this.props.comments.comments.filter((comment)=>comment.dishId===parseInt(match.params.dishId,10))}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage}/>\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}/>}/>\r\n              <Route path=\"/menu/:dishId\" component={DishWithId}/>\r\n              <Route exact path=\"/contactus\" component={() =><Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}/>\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/>}/>\r\n              <Redirect to=\"/home\"/>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading:false, errMess:null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading:true, errMess:null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading:false,errMess:action.payload,dishes:[]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading:false, errMess:null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading:false,errMess:action.payload,comments:[]};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading:false, errMess:null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading:true, errMess:null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading:false,errMess:action.payload,promotions:[]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders:[]\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading:false, errMess:null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading:true, errMess:null, leaders: []};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading:false,errMess:action.payload,leaders:[]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname:'',\r\n    lastname:'',\r\n    telnum:'',\r\n    email:'',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message:''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store = {store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}